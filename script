#! /usr/bash

usage () {
    echo "Usage: '$0' <source file> <target aws bucket> <profile name> [-new filename]"
    exit 1
}

#validate min. number of args
if [[ $# -lt 3 || $# -gt 4 ]];
then
    echo "Please provide 3 or 4 arguments."
    usage
fi

source_file="$1"
target_bucket="$2"
profile_name="$3"
recursive=""


if [[ $# -eq 4 ]];
then   
    new_filename="$4"
    #validate new_filename
    if [[ ! $new_filename =~ ^[a-zA-Z0-9!-_().*\']*$ ]];
    then
        printf "Your new file name contains unsupported characters.\n"
        printf "To allow for cross-platform compatibility, new file names can only contain the following characters[a-zA-Z0-9!-_.*']"
        exit 1
    fi
else
    new_filename="$1"
fi

#validate source file
if [[ -e "$source_file" ]];
then
    if [[ -r "$source_file" ]];
    then
        if [[ -f "$source_file" ]];
        then
            :
        elif [[ -d "$source_file" ]];
        then
            while true; 
            do
                read -r -p "You're attempting to upload a directory and all of its content, continue? Y-[Yes], N-[No, cancel]" recursive
                case "$recursive" in
                    [Yy])
                        recursive="--recursive"
                        break
                        ;;
                    [Nn])
                        echo "Operation cancelled."
                        exit 1
                        ;;
                    *)
                        echo "Invalid response, please try again"
                        ;;
                esac
            done
        else
            echo "Invalid source file type. Please try again."
            exit 1
        fi
    else
        echo "Sorry, you don't have read permissions for the source file"
        exit 1
    fi
else
    echo "The file/directory $source_file does not exist. Please try again."
    exit 1
fi

#if AWS CLI isn't installed, install and configure

aws_cli_path=$(which aws)


if [[ -z "$aws_cli_path" ]]; 
then
    if [[ -e "./awscliv2.zip" && -s "./awscliv2.zip" ]];
    then
        unzip awscliv2.zip && sudo ./aws/install
    elif [[ -e "./aws" && -s "./aws" ]]; 
    then
        sudo ./aws/install
    else
        #AWS CLI not installed, install
        echo "Installing AWS CLI..."
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" && unzip awscliv2.zip && sudo ./aws/install
        
        exit_code=$?
        
        #If installation was successful, configure creditials
        if [ $exit_code -ne 0 ]; then
            :
        else
            echo "Unable to auto-install AWS CLI. Please install manually and try again." 
            exit 1  
        fi 
    fi
fi


if [[ -z $(which pv) ]];
then
    sudo apt-get update
    sudo apt-get install -y pv
fi
pv_exit_code=$?

#upload file
if [[ $pv_exit_code -eq 0 ]];
then
    file_in_bucket=$(aws s3 ls "s3://$target_bucket/$new_filename" --profile "$profile_name" --human-readable)
fi


if [[ -z $file_in_bucket ]];
then
    response=$(pv "$source_file" | aws s3 cp - "s3://$target_bucket/$new_filename" --profile "$profile_name" "$recursive")
else
    echo -e "\nTarget bucket $target_bucket contains the possibly duplicate item(s) listed below:"
    echo "$file_in_bucket"
    while true;
    do
        read -rp "Would you like to (r)ename, (o)verwrite, or (s)kip: " sync_op
        echo
        case "$sync_op" in
            [Rr])
                while true;
                do
                    read -rp "What would you like to rename your file? : " new_name
                    if [[ $new_name =~ ^[^a-zA-Z0-9!-_().*\']*$ ]];
                    then
                        printf "Your new file name contains unsupported characters.\n"
                        printf "To allow for cross-platform compatibility, new file names can only contain the following characters: [a-zA-Z0-9!-_.*']"
                    else
                        break
                    fi
                done
                response=$(pv "$source_file" | aws s3 cp - "s3://$target_bucket/$new_name" --profile "$profile_name")
                break
                ;;
            [Oo])
                aws s3 rm "s3://$target_bucket/$new_filename" --profile "$profile_name" --quiet
                response=$(pv "$source_file" | aws s3 cp - "s3://$target_bucket/$new_filename" --profile "$profile_name")
                break
                ;;
            [Ss])
                echo "Upload cancelled."
                exit 1
                ;;
            *)
                echo "Invalid response, please try again"
                ;;
        esac
    done
fi

if [[ $? -ne 0 ]];
then
    echo -e "ERROR:  AWS reports s3api copy-object operation failed.\n$response"
    exit 1
else
    echo -e "Operation successful"
fi